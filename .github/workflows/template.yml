name: Scrape Composites Template

on:
  workflow_call:
    inputs:
      server-offset:
        required: true
        type: number
      client-digits:
        required: true
        type: number
env:
  CARGO_TERM_COLOR: always
jobs:
  C:
    strategy:
      fail-fast: false
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ inputs.client-digits }}-${{ inputs.server-offset }}
      cancel-in-progress: false
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    continue-on-error: true
    steps:
    - uses: actions/checkout@v4
    - name: Factorize
      run: |
           (
             sudo apt-get install libecm1
             digits=${{ inputs.client-digits }} ./scrape-composites-large-ci.sh
           ) &
           client=$!
           export server_digits=$((${{ inputs.client-digits }} + ${{ inputs.server-offset }}))
           if [ ${server_digits} -lt 90 ]; then
             export server_digits=90
           fi
           (
             let "start = (${{ inputs.server-offset }} - 10) * 500"
             while true; do
               curl -Ss --retry 10 --retry-all-errors "https://factordb.com/listtype.php?t=3&mindig=${server-digits}&perpage=5000&start=${start}" \
                   | grep -o "id=[0-9]\+" \
                   | uniq \
                   | grep -o "[0-9]\+" \
                   | nice -+19 ./scrape-composites-server-side.sh
               let "start = (start + 5000) % 105000"
             done
           ) &
           (
             sleep 19800
             killall -HUP parallel
             rm /tmp/delete_*
             rm /tmp/scrape-composites-fifo
             have_msieve=$("pgrep msieve")
             sleep 1200
             if [ "${have_msieve}" != "" ]; then
               pkill msieve && sleep 30
             fi
             pkill curl
           ) &
           wait $client
    - uses: actions/upload-artifact@v4
      with:
        name: failed-submissions-${{ inputs.client-digits }}-${{ inputs.server-offset }}.csv
        path: failed-submissions.csv
        if-no-files-found: ignore
  RedoFailedUploads:
    needs: C
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
    - name: Download Failed Submissions
      uses: actions/download-artifact@v5
      with:
        path: failed-submissions.csv
        pattern: failed-submissions-*
    - run:
        while IFS=, read -r quotient factor; do
          curl -X POST --retry 10 --retry-all-errors --retry-delay 10 http://factordb.com/reportfactor.php -d "number=${quotient}&factor=${factor}" \
            | grep -q '\(Already\|submitted\)'
        done < <(cat failed-submissions*/*.csv)
